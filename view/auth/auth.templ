package auth

import (
	"mengzhao/view/layout"
	"github.com/nedpals/supabase-go"
)

templ AccountSetup() {
    @layout.App(true) {
        <div class="max-w-xl bg-base-300 px-6 py-12 w-full mx-auto mt-4 rounded-xl">
        <h1 class="text-xl font-black mb-8 text-center">Account Setup</h1>
          @AccountSetupForm(AccountSetupParams{}, AccountSetupErrors{})
        </div>
    }
}

type AccountSetupParams struct {
    Username string
}

type AccountSetupErrors struct {
    Username string
}

// outerHTML will replace: <div><p>username</p></div>
// innterHTML will replace: the <p>username</p>
templ AccountSetupForm(params AccountSetupParams, errors AccountSetupErrors) {
    <form
        hx-post="/account/setup"
        hx-swap="outerHTML"
    >
        <label class="form-control w-full max-w-xs">
            <div class="label">
                <span class="label-text">Enter your username</span>
                //<span class="label-text-alt">Top Right label</span>
            </div>
            <input class="input input-bordered" type="text" name="username" placeholder="Username" value={ params.Username } />
            <div class="label">
                if len(errors.Username) > 0 {
                    <span class="label-text text-error">{ errors.Username }</span>
                }
            </div>
        </label>

        <button class="btn btn-primary">Submit <i class="fa-solid fa-arrow-right"></i></button>
    </form>
}

templ Signup() {
    @layout.App(false) {
		<div class="flex justify-center mt-[calc(100vh-100vh+8rem)]">
			<div class="max-w-md w-full bg-base-300 py-12 px-8 rounded-xl">
				<h1 class="text-center text-xl font-black mb-10">Signup to MengZhao</h1>
					@SignupForm(SignupParams{}, SignupErrors{})
			</div>
		</div>
	}
}

type SignupParams struct {
   Email string
   Password string
   ConfirmPassword string
}

type SignupErrors struct {
   Email string
   Password string
   ConfirmPassword string
}

templ SignupForm(params SignupParams, errors SignupErrors) {
	<form
			hx-post="/signup"
			hx-swap="outerHTML"
			class="space-y-4"
	>
		<div class="w-full">
			<div class="label">
				<span class="label-text-alt">Email Address</span>
			</div>
			<input type="email" value={ params.Email} name="email" required placeholder="Type here" class="input input-bordered w-full"/>
			if len(errors.Email) > 0 {
				<div class="label">
					<span class="label-text-alt text-error">{ errors.Email }</span>
				</div>
			}
		</div>
		<div class="w-full">
			<div class="label">
				<span class="label-text-alt">Password</span>
			</div>
			<input type="password" name="password" required autocomplete="off" class="input input-bordered w-full"/>
			if len(errors.Password) > 0 {
				<div class="label">
					<span class="label-text-alt text-error">{ errors.Password }</span>
				</div>
			}
		</div>
		<div class="w-full">
			<div class="label">
				<span class="label-text-alt">Confirm Password</span>
			</div>
			<input type="password" name="confirmPassword" required autocomplete="off" class="input input-bordered w-full"/>
			if len(errors.Password) > 0 {
				<div class="label">
					<span class="label-text-alt text-error">{ errors.ConfirmPassword }</span>
				</div>
			}
		</div>
		<button type="submit" class="btn btn-primary w-full">Login <i class="fa-solid fa-arrow-right"></i></button>
	</form>
}


templ SignupSuccessful(email string) {
   <div>Confirmation email sent to: <span class="font-semibold text-success">{ email }</span></div>
}

// /////////////////////////////////////////////////////////////////

templ Login() {
    @layout.App(false) {
		<div class="flex justify-center mt-[calc(100vh-100vh+8rem)]">
			<div class="max-w-md w-full bg-base-300 py-12 px-8 rounded-xl">
				<h1 class="text-center text-xl font-black mb-10">Login to MengZhao</h1>
					@LoginForm(supabase.UserCredentials{}, LoginErrors{})
			</div>
		</div>
	}
}

type LoginErrors struct {
	Email string
	Password string
	InvalidCreds string
}

// innerHTML replaces existing content INSIDE the form, but not the form itself.
// outerHTML replaces the entire form.
templ LoginForm(credentials supabase.UserCredentials, errors LoginErrors) {
	<form
			hx-post="/login"
			hx-swap="outerHTML"
			class="space-y-4"
	>
		<div class="w-full">
			<div class="label">
				<span class="label-text-alt">Email address</span>
			</div>
			<input type="email" value={credentials.Email} name="email" required placeholder="Type here" class="input input-bordered w-full"/>
			if len(errors.Email) > 0 {
				<div class="label">
					<span class="label-text-alt text-error">{ errors.Email }</span>
				</div>
			}
		</div>
		<button type="submit" class="btn btn-primary w-full">Login <i class="fa-solid fa-arrow-right"></i></button>
		<div class="divider">OR</div>
		<a href="/login/provider/google" class="btn btn-outline w-full">Login with<i class="fa-brands fa-google"></i></a>
	</form>
}

templ MagicLinkSuccessful(email string) {
    <div> An email has been sent to <span class="font-semibold text-success">{ email }</span> with a link to login.</div>
}

templ CallbackScript() {
    <script>
        var url = window.location.href;
        var newURL = url.replace("#", "?");
        window.location = newURL;
    </script>
}